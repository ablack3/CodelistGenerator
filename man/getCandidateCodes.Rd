% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getCandidateCodes.R
\name{getCandidateCodes}
\alias{getCandidateCodes}
\title{Generate candidate codelist for the OMOP CDM}
\usage{
getCandidateCodes(
  keywords,
  domains = "Condition",
  standardConcept = "Standard",
  searchSynonyms = FALSE,
  searchSource = FALSE,
  fuzzyMatch = FALSE,
  maxDistanceCost = 0.1,
  exclude = NULL,
  includeDescendants = TRUE,
  includeAncestor = FALSE,
  verbose = FALSE,
  db,
  vocabularyDatabaseSchema
)
}
\arguments{
\item{keywords}{Character vector of words to search for.
Where more than one word is given (e.g. "knee osteoarthritis"),
all combinations of those words should be identified
positions (e.g. "osteoarthritis of knee") should be identified.}

\item{domains}{Character vector with one or more of the OMOP CDM domain.}

\item{standardConcept}{Character vector with one or more of "Standard",
"Classification", and "Non-standard". These correspond to the flags used
for the standard_concept field in the concept table of the cdm.}

\item{searchSynonyms}{Either TRUE or FALSE. If TRUE the code will also
search via the concept synonym table.}

\item{searchSource}{Either TRUE or FALSE. If TRUE the code will also
search via source concepts.}

\item{fuzzyMatch}{Either TRUE or FALSE. If TRUE the fuzzy matching
will be used, with approximate matches identified.}

\item{maxDistanceCost, }{The
maximum number/fraction of match cost (generalized Levenshtein distance)
for fuzzy matching (see ??base::agrep for further details).}

\item{exclude}{Character vector of words
to identify concepts to exclude.}

\item{includeDescendants}{Either TRUE or FALSE.
If TRUE descendant concepts of identified concepts
will be included in the candidate codelist.}

\item{includeAncestor}{Either TRUE or FALSE.
If TRUE the direct ancestor concepts of identified concepts
will be included in the candidate codelist.}

\item{verbose}{Either TRUE or FALSE.
If TRUE, progress will be reported.}

\item{db}{Database connection via DBI::dbConnect()}

\item{vocabularyDatabaseSchema}{Name of database
schema with vocab tables}
}
\value{
tibble
}
\description{
This function generates a set of codes that
can be considered for creating a phenotype
using the OMOP CDM.
}
\examples{
\dontrun{
library(DBI)
library(CodelistGenerator)
db <- DBI::dbConnect(" Your database connection here " )
vocabularyDatabaseSchema <- " Your vocabulary schema here "
getCandidateCodes(
  keywords = "asthma",
  db = db,
  vocabularyDatabaseSchema = vocabularyDatabaseSchema
)
}
}
